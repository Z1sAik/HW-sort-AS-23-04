Результаты для алгоритма: Kochetov_smoothort - data(random_ints100)
Первые 10 отсортированных данных: 175 219 258 296 727 736 851 922 1240 1468 
Время выполнения: 0.00002600 секунд

Результаты для алгоритма: Kochetov_smoothort - data(random_ints1000)
Первые 10 отсортированных данных: 9 13 16 26 30 43 44 59 75 78 
Время выполнения: 0.00031700 секунд

Результаты для алгоритма: Kochetov_smoothort - data(random_ints10000)
Первые 10 отсортированных данных: 1 1 2 6 7 7 8 8 9 14 
Время выполнения: 0.00434000 секунд

Результаты для алгоритма: Kochetov_smoothort - data(sorted)
Первые 10 отсортированных данных: 0 1 2 3 4 5 6 7 8 9 
Время выполнения: 0.00031300 секунд

Результаты для алгоритма: Kochetov_smoothort - data(reverse_sorted)
Первые 10 отсортированных данных: 0 1 2 3 4 5 6 7 8 9 
Время выполнения: 0.00028100 секунд

Результаты для алгоритма: Kochetov_smoothort - data(duplicates)
Первые 10 отсортированных данных: 1 4 6 10 10 10 10 10 10 10 
Время выполнения: 0.00006700 секунд

Результаты для алгоритма: Kochetov_smoothort - data(random_doubles)
Первые 10 отсортированных данных: -99.9576 -99.9263 -99.9107 -99.9 -99.8524 -99.8361 -99.8271 -99.776 -99.7569 -99.6961 
Время выполнения: 0.00448300 секунд

Результаты для алгоритма: Kochetov_smoothort - data(otric_numbers)
Первые 10 отсортированных данных: -1000 -1000 -1000 -1000 -1000 -1000 -1000 -1000 -1000 -1000 
Время выполнения: 0.00436700 секунд

Результаты для алгоритма: Khabarov_introspectiveSort - data(random_ints100)
Первые 10 отсортированных данных: 175 219 296 727 736 851 922 1240 1595 1680 
Время выполнения: 0.00002900 секунд

Результаты для алгоритма: Khabarov_introspectiveSort - data(random_ints1000)
Первые 10 отсортированных данных: 9 13 16 26 30 43 44 59 75 78 
Время выполнения: 0.00034900 секунд

Результаты для алгоритма: Khabarov_introspectiveSort - data(random_ints10000)
Первые 10 отсортированных данных: 1 1 2 6 7 7 8 8 9 14 
Время выполнения: 0.00511600 секунд

Результаты для алгоритма: Khabarov_introspectiveSort - data(sorted)
Первые 10 отсортированных данных: 0 1 2 3 4 5 6 7 8 9 
Время выполнения: 0.00035500 секунд

Результаты для алгоритма: Khabarov_introspectiveSort - data(reverse_sorted)
Первые 10 отсортированных данных: 1 2 3 4 5 6 7 8 9 10 
Время выполнения: 0.00034600 секунд

Результаты для алгоритма: Khabarov_introspectiveSort - data(duplicates)
Первые 10 отсортированных данных: 1 4 6 10 10 10 10 10 10 10 
Время выполнения: 0.00034400 секунд

Результаты для алгоритма: Khabarov_introspectiveSort - data(random_doubles)
Первые 10 отсортированных данных: -99.9576 -99.9263 -99.9107 -99.9 -99.8524 -99.8361 -99.8271 -99.776 -99.7569 -99.6961 
Время выполнения: 0.01113100 секунд

Результаты для алгоритма: Khabarov_introspectiveSort - data(otric_numbers)
Первые 10 отсортированных данных: -1000 -1000 -1000 -1000 -1000 -1000 -1000 -1000 -1000 -1000 
Время выполнения: 0.00656400 секунд

Результаты для алгоритма: Osharov_flashsort - data(random_ints100)
Первые 10 отсортированных данных: 175 219 258 296 727 736 851 922 1240 1468 
Время выполнения: 0.00004700 секунд

Результаты для алгоритма: Osharov_flashsort - data(random_ints1000)
Первые 10 отсортированных данных: 9 13 16 26 30 43 44 59 75 78 
Время выполнения: 0.00024400 секунд

Результаты для алгоритма: Osharov_flashsort - data(random_ints10000)
Первые 10 отсортированных данных: 1 1 2 6 7 7 8 8 9 14 
Время выполнения: 0.00235400 секунд

Результаты для алгоритма: Osharov_flashsort - data(sorted)
Первые 10 отсортированных данных: 0 1 2 3 4 5 6 7 8 9 
Время выполнения: 0.00022500 секунд

Результаты для алгоритма: Osharov_flashsort - data(reverse_sorted)
Первые 10 отсортированных данных: 0 1 2 3 4 5 6 7 8 9 
Время выполнения: 0.00024700 секунд

Результаты для алгоритма: Osharov_flashsort - data(duplicates)
Первые 10 отсортированных данных: 1 4 6 10 10 10 10 10 10 10 
Время выполнения: 0.00013000 секунд

Результаты для алгоритма: Osharov_flashsort - data(random_doubles)
Первые 10 отсортированных данных: -99.9576 -99.9263 -99.9107 -99.9 -99.8524 -99.8361 -99.8271 -99.776 -99.7569 -99.6961 
Время выполнения: 0.00242600 секунд

Результаты для алгоритма: Osharov_flashsort - data(otric_numbers)
Первые 10 отсортированных данных: -1000 -1000 -1000 -1000 -1000 -1000 -1000 -1000 -1000 -1000 
Время выполнения: 0.00142100 секунд

Результаты для алгоритма: Sliunchenko_dualpivotsort - data(random_ints100)
Первые 10 отсортированных данных: 296 258 219 175 2107 727 736 851 922 1240 
Время выполнения: 0.00002200 секунд

Результаты для алгоритма: Sliunchenko_dualpivotsort - data(random_ints1000)
Первые 10 отсортированных данных: 13 9 16 150 26 30 43 44 59 75 
Время выполнения: 0.00025200 секунд

Результаты для алгоритма: Sliunchenko_dualpivotsort - data(random_ints10000)
Первые 10 отсортированных данных: 1 1 14 2 6 7 7 8 8 9 
Время выполнения: 0.00343300 секунд

Результаты для алгоритма: Sliunchenko_dualpivotsort - data(sorted)
Первые 10 отсортированных данных: 0 1 2 3 4 5 6 7 8 9 
Время выполнения: 0.00470900 секунд

Результаты для алгоритма: Sliunchenko_dualpivotsort - data(reverse_sorted)
Первые 10 отсортированных данных: 999 998 997 996 995 994 993 992 991 990 
Время выполнения: 0.00445500 секунд

Результаты для алгоритма: Sliunchenko_dualpivotsort - data(duplicates)
Первые 10 отсортированных данных: 1 4 6 28 10 10 10 10 10 10 
Время выполнения: 0.00370500 секунд

Результаты для алгоритма: Sliunchenko_dualpivotsort - data(random_doubles)
Первые 10 отсортированных данных: -99.9576 -99.9107 -99.9263 -99.9 -99.8524 -99.8361 -99.8271 -99.776 -99.7569 -99.6961 
Время выполнения: 0.00387300 секунд

Результаты для алгоритма: Sliunchenko_dualpivotsort - data(otric_numbers)
Первые 10 отсортированных данных: -1000 -1000 -1000 -1000 -1000 -1000 -1000 -1000 -1000 -1000 
Время выполнения: 0.00593300 секунд

